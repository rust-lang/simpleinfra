#!/usr/bin/env python3
import subprocess
import pathlib
import shutil
import tempfile
import argparse
import ansibleutils

def run_playbook(args):
    tempdir = pathlib.Path(tempfile.mkdtemp())
    ansibleutils.create_workspace(tempdir, args.env, args.playbook)
    try:
        # Invoke the ansible binary installed in the virtualenv
        ansible_args = [
            str(ansibleutils.VENV_PATH / "bin" / "ansible-playbook"),
            "-i", str(tempdir / "env" / "hosts"),
            str(tempdir / "play" / "playbook.yml"),
        ]
        if args.user is not None:
            ansible_args += ["-u", args.user]
        if args.start_at_task is not None:
            ansible_args += ["--start-at-task", args.start_at_task]
        res = subprocess.run(ansible_args, cwd=str(tempdir))
        if res.returncode != 0:
            exit(1)
    finally:
        shutil.rmtree(str(tempdir), ignore_errors=True)

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("env")
    parser.add_argument("playbook")
    parser.add_argument(
        "-u", "--user", help="user to log into instances as", default=None,
    )
    parser.add_argument(
        "--start-at-task", help="start at a task with the provided name",
        default=None,
    )
    args = parser.parse_args()

    ansibleutils.install_ansible()
    run_playbook(args)
